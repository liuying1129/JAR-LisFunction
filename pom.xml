<project xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
  http://maven.apache.org/POM/4.0.0 
  http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.yklis</groupId>
	<artifactId>LisFunction</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

    <!-- 定义变量 -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.version>4.1.7.RELEASE</spring.version>
        <spring.groupId>org.springframework</spring.groupId>
    </properties>

    <dependencies>
        <!-- scoper取值范围：
        compile，缺省值，适用于所有阶段，会随着项目一起发布。 
        provided，期望JDK、容器或使用者会提供这个依赖。如servlet.jar。 不会被打包
        runtime，只在运行时使用，如JDBC驱动，适用运行和测试阶段。 
        test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。 
        system，类似provided，需要显式提供包含依赖的jar，Maven不会在Repository中查找它 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <!-- <scope>test</scope> -->
        </dependency>          
                
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
        
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.3.0</version>
        </dependency>
                
        <dependency>
            <groupId>${spring.groupId}</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        
        <dependency>
            <groupId>${spring.groupId}</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>        
                
        <!-- alibaba的JSON处理库 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.39</version>
        </dependency>
    </dependencies>
    
	<build> 
	    <!-- 如果不定义finalName，则生成的包名是artifactId-version.jar -->
	    <!-- 定义finalName，则生成的包名是finalName.jar -->
	    <finalName>LisFunction</finalName>
	    
        <!-- 如果不加该resources，则打包时只会默认将src/main/resources的文件做为资源文件打包，漏掉dao目录下的xml资源文件 -->
        <resources>  
           <resource>  
              <directory>src/main/resources</directory>  
           </resource>
           <resource>  
              <directory>src/main/java</directory>  
              <includes>  
                  <!-- **/*,表示src/main/java下各级子目录的xml文件 -->
                  <include>**/*.xml</include>  
              </includes>  
           </resource>    
        </resources>  	    	    
	    
	    <plugins>
	        <!-- 解决maven编译时“错误:编码GBK的不可映射字符”的问题 -->
	        <plugin>
	           <groupId>org.apache.maven.plugins</groupId>  
               <artifactId>maven-compiler-plugin</artifactId>  
               <version>3.5.1</version>  
               <configuration>  
	               <source>1.7</source>  
	               <target>1.7</target>  
	               <encoding>utf8</encoding>    
               </configuration>  
	        </plugin>	        
	    </plugins>	    
	</build>
  
</project>
